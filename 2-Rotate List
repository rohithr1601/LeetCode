61. Rotate List
Medium
Topics
Companies
Given the head of a linked list, rotate the list to the right by k places.

 

Example 1:


Input: head = [1,2,3,4,5], k = 2
Output: [4,5,1,2,3]
Example 2:


Input: head = [0,1,2], k = 4
Output: [2,0,1]
 

Constraints:

The number of nodes in the list is in the range [0, 500].
-100 <= Node.val <= 100
0 <= k <= 2 * 109



+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head == null || head.next == null || k == 0)
        {
            return head;
        }
        ListNode cur = head;
        int l = 1;
        while(cur.next != null)
        {
            cur = cur.next;
            l++;
        }
        cur.next = head;
        int ti = l - k % l - 1;
        int hi = l - k % l;
        ListNode t = head;
        for(int i =0;i< ti; i++)
        {
            t = t.next;
        }
        ListNode h = t.next;
        t.next = null;
        return h;
    }
}
